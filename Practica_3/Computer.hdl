// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Computer.hdl

/**
 * The HACK computer, including CPU, ROM and RAM.
 * When reset is 0, the program stored in the computer's ROM executes.
 * When reset is 1, the execution of the program restarts. 
 * Thus, to start a program's execution, reset must be pushed "up" (1)
 * and "down" (0). From this point onward the user is at the mercy of 
 * the software. In particular, depending on the program's code, the 
 * screen may show some output and the user may be able to interact 
 * with the computer via the keyboard.
 */

CHIP Computer {

    IN reset;

    PARTS:
    //esta conformado por tres partes: la memoria, la rom y la cpu

    //Primero la rom32k para la cual va a suministrar las instrucciones
    //como entrada tiene el pc, la cual es la posicion de la instruccion
    //y la salida de esta la cual es las instrucciones
    ROM32K(address=pc, out=instruction);

    //conectamos esta a la cpu, la cual va a obtener las instrucciones
    //inM es suministrada por la memoria
    //instruction es la suministrada por la ROM
    //reset es una entrada
    //outM es la salida que arroja
    //writeM indica si se carga o no
    //addresM es la direccion en la memoria
    //pc retroalimenta la ROM para seguir mandando instrucciones
    CPU(inM=outMemory, instruction=instruction, reset=reset, outM=inMemory, writeM=writeInMemory, addressM=addressInMemory, pc=pc);

    //por ultimo la memoria, suministra y guarda los datos de la cpu
    //in en la memoria es la entrada de valor en la memoria
    //load, es para cargar o no en la memoria, para eso se usa wirte
    //address es la direcciones en la memoria que le indicque la cpu
    //out es la salida de la memoria para suministrar lo pedido por cpu
    Memory(in=inMemory, load=writeInMemory, address=addressInMemory, out=outMemory);
}
