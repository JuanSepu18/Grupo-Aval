// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // seleccionamos a donde mandar el load
    // entre las 8 ram de 512
    DMux8Way(in=load, sel=address[0..2], a=loadR1, b=loadR2, c=loadR3, d=loadR4, e=loadR5, f=loadR6, g=loadR7, h=loadR8);

    //ahora hacemos la repectiva asignacion del input en la ram de 512
    RAM512(in=in, load=loadR2, address=address[3..11], out=ram512N2);
    RAM512(in=in, load=loadR1, address=address[3..11], out=ram512N1);
    RAM512(in=in, load=loadR3, address=address[3..11], out=ram512N3);
    RAM512(in=in, load=loadR4, address=address[3..11], out=ram512N4);
    RAM512(in=in, load=loadR5, address=address[3..11], out=ram512N5);
    RAM512(in=in, load=loadR6, address=address[3..11], out=ram512N6);
    RAM512(in=in, load=loadR7, address=address[3..11], out=ram512N7);
    RAM512(in=in, load=loadR8, address=address[3..11], out=ram512N8);

    //ahora seleccionamos uno de los registro devueltos por la ram512
    Mux8Way16(a=ram512N1, b=ram512N2, c=ram512N3, d=ram512N4, e=ram512N5, f=ram512N6, g=ram512N7, h=ram512N8, sel=address[0..2], out=out);
}